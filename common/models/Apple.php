<?php

namespace common\models;

use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "apple".
 *
 * @property int $id
 * @property string|null $color
 * @property int|null $created_at
 * @property int|null $fall_date
 * @property int|null $status
 * @property int|null $size
 */
class Apple extends \yii\db\ActiveRecord
{


    const STATUS_HANGING_ON_A_TREE = 1; //яблоко висит на дереве
    const STATUS_FELL_TO_THE_GROUND = 2; //яблоко лежит на земле
    const STATUS_ROTTEN = 3; //яблоко испортилось

    const DEFAULT_SIZE = 100; // %

    public $colorList = ['green','blue','red','black'];

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'apple';
    }

    public function __construct($color = null, $config = [])
    {
        if(!is_null($color))
        {
            $this->color = $color;
        }
        parent::__construct($config);
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['created_at', 'fall_date'], 'integer'],
            [['color'], 'string', 'max' => 50],

            [['status'], 'in','range'=>[self::STATUS_HANGING_ON_A_TREE, self::STATUS_FELL_TO_THE_GROUND, self::STATUS_ROTTEN]],
            ['status', 'default','value'=>self::STATUS_HANGING_ON_A_TREE],

            ['size', 'default','value'=>self::DEFAULT_SIZE],
        ];
    }

    /**
     * {@inheritdoc}
     */

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'color' => 'Цвет',
            'created_at' => 'Дата появления',
            'fall_date' => 'Дата падения',
            'status' => 'Состояние',
            'size' => 'Сколько съели (%)',
        ];
    }

    public function afterFind()
    {
        if($this->isFell() and $this->fall_date+(5*3600)<=time()){
            $this->rotten();
        }

//        if($this->size>0)
//        {
//            $this->size = $this->size/self::DEFAULT_SIZE;
//        }

        parent::afterFind(); // TODO: Change the autogenerated stub
    }


    public function beforeSave($insert)
    {
        if($this->isNewRecord)
        {
            $this->created_at = time();
            $this->having();
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    public function getStatusName()
    {
        return ArrayHelper::getValue(self::getStatusList(), $this->status);
    }

    public static function getStatusList()
    {
        return [
            self::STATUS_HANGING_ON_A_TREE => 'Висит на дереве',
            self::STATUS_FELL_TO_THE_GROUND => 'Лежит на земле',
            self::STATUS_ROTTEN => 'Испортилось',
        ];
    }



    public function rotten()
    {
        $this->status = self::STATUS_ROTTEN;
        return $this->save(false,['status']);
    }

    public function having()
    {
       $this->status = self::STATUS_HANGING_ON_A_TREE;
    }


    public function isHaving()
    {
        if($this->status == self::STATUS_HANGING_ON_A_TREE)
        {
            return true;
        }

        return  false;
    }

    public function isRotten()
    {
        if($this->status == self::STATUS_ROTTEN)
        {
            return true;
        }

        return  false;
    }

    public function isFell()
    {
        if($this->status == self::STATUS_FELL_TO_THE_GROUND)
        {
            return true;
        }

        return  false;
    }

    public function fallToGround()
    {
        $this->status = self::STATUS_FELL_TO_THE_GROUND;
        $this->fall_date = time();
    }

    public function isEaten()
    {
        if($this->size == 0)
        {
            return true;
        }

        return  false;
    }

}
